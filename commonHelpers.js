import{a as f,S,i as P}from"./assets/vendor-527658dd.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();class v{constructor(){this.BASE_URL="https://pixabay.com",this.API_KEY="42308857-af265c382d366c65500552078",this.perPage=15,f.defaults.baseURL=this.BASE_URL}async getImages(r,s=1){const a=new URLSearchParams({key:this.API_KEY,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:this.perPage,page:s});return(await f.get("/api/",{params:a})).data}}function E({webformatURL:t,largeImageURL:r,tags:s,likes:a,views:e,comments:o,downloads:i}){return`      
      <li class="card">
        <a href ="${r}">
        <img class="card-img" src="${t}" alt="${s}" >
        <ul class="card-data">
          <li><h3>Likes</h3><p>${a}</p></li>
          <li><h3>Views</h3><p>${e}</p></li>
          <li><h3>Comments</h3><p>${o}</p></li>
          <li><h3>Downloads</h3><p>${i}</p></li>
        </ul>
      </li>`}function q(t){return t.map(E).join("")}const c=new v,A=new S(".gallery a"),x=document.querySelector(".search-form"),d=document.querySelector(".gallery"),p=document.querySelector(".loader"),u=document.querySelector(".load-btn");let l,n,m;x.addEventListener("submit",B);u.addEventListener("click",C);async function B(t){t.preventDefault(),d.innerHTML="",l=t.target.query.value.trim(),n=1,y(),h();try{const r=await c.getImages(l);m=Math.ceil(r.totalHits/c.perPage);const s=r.hits;if(!s.length)throw new Error("Sorry, there are no images matching your search query. Please try again!");w(s),b()}catch(r){g(r.message)}L(),t.target.reset()}async function C(t){n+=1,h(),y();const r=await c.getImages(l,n);w(r.hits),L(),b();const s=d.firstElementChild.getBoundingClientRect().height;scrollBy({behavior:"smooth",top:s*2})}function g(t){P.error({pauseOnHover:!1,position:"topRight",message:t})}function y(){p.classList.remove("hidden")}function L(){p.classList.add("hidden")}function O(){u.classList.remove("hidden")}function h(){u.classList.add("hidden")}function b(){n>=m?(h(),g("We're sorry, but you've reached the end of search results.")):O()}function w(t){d.insertAdjacentHTML("beforeend",q(t)),A.refresh()}
//# sourceMappingURL=commonHelpers.js.map
